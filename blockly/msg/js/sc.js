// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.sc');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Agiunghe unu cumentu";
Blockly.Msg.AUTH = "Permiti a custa app de sarvare su traballu tuo e de ti lu fàghere cumpartzire.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Muda valori:";
Blockly.Msg.CHAT = "Faedda cun su cumpàngiu tuo iscriende inoghe!";
Blockly.Msg.CLEAN_UP = "Lìmpia is brocus";
Blockly.Msg.COLLAPSE_ALL = "Serra e stringi Brocus";
Blockly.Msg.COLLAPSE_BLOCK = "Serra e stringi Brocu";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colori 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colori 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "raportu";
Blockly.Msg.COLOUR_BLEND_TITLE = "mestura";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Amestura duus coloris cun unu raportu (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Scebera unu colori de sa tauledda.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "Unu colori a brítiu";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Scebera unu colori a brítiu.";
Blockly.Msg.COLOUR_RGB_BLUE = "blue";
Blockly.Msg.COLOUR_RGB_GREEN = "birdi";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "arrùbiu";
Blockly.Msg.COLOUR_RGB_TITLE = "colora cun";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Cuncorda unu colori cun su tanti de arrubiu, birdi, e blue. Totu is valoris depint essi intra 0 e 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "sàrtiat a foras de sa lòriga";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "sighit cun su repicu afatànti";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bessit de sa lòriga.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sartiat su chi abarrat de sa loriga, e sighit cun su repicu afatànti.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Amonestu: Custu brocu ddu podis ponni sceti aintru de una lòriga.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "po dònnia item %1 in lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Po dònnia item in sa lista, ponit sa variàbili '%1' pari a s'item, e tandu fait pariga de cumandus.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "po %1 de %2 fintzas %3 a passus de %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Fait pigai a sa variàbili \"%1\" i valoris de su primu numeru a s'urtimu, a su passu impostau e fait su brocu.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Aciungi una cunditzioni a su brocu si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Aciungi una urtima cunditzioni piga-totu a su brocu si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Aciungi, fùlia, o assenta is partis po torrai a sètiu custu brocu si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinuncas";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinuncas si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si su valori est berus, tandu fait pariga de cumandus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si su valori est berus, tandu fai su primu brocu de is cumandus. Sinuncas, fai su segundu brocu de is cumandus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si su primu valori est beridadi, tandu fai su primu brocu de is cumandus. Sinuncas, si su segundu valori est beridadi, fai su segundu brocu de is cumandus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si su primu valori est berus, tandu fai su primu brocu de is cumandus. Sinuncas, si su segundu valori est berus, fai su segundu brocu de is cumandus. Si mancu unu valori est berus, tandu fai s'urtimu brocu de is cumandus.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "fai";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repiti %1 bortas";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Fait pariga de cumandus prus bortas.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repiti fintzas";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repiti interis";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Interis su valori est frassu, tandu fai pariga de cumandus.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Interis su valori est berus, tandu fai pariga de cumandus.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Scancellu su %1 de is brocus?";
Blockly.Msg.DELETE_BLOCK = "Fùlia Blocu";
Blockly.Msg.DELETE_X_BLOCKS = "Fulia %1 Blocus";
Blockly.Msg.DISABLE_BLOCK = "Disabìlita Blocu";
Blockly.Msg.DUPLICATE_BLOCK = "Dùplica";
Blockly.Msg.ENABLE_BLOCK = "Abìlita Blocu";
Blockly.Msg.EXPAND_ALL = "Aberi Brocus";
Blockly.Msg.EXPAND_BLOCK = "Aberi Brocu";
Blockly.Msg.EXTERNAL_INPUTS = "Intradas esternas";
Blockly.Msg.HELP = "Agiudu";
Blockly.Msg.INLINE_INPUTS = "Intradas in lìnia";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "fait una lista buida";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Torrat una lista, de longària 0, chena records de datus.";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Aciungi, fùlia, o assenta is partis po torrai a sètiu custu brocu lista.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "fait una lista cun";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Acciungi unu item a sa lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Fait una lista cun calisiollat numeru de items.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primu";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# de sa fini";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "piga";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "piga e fùlia";
Blockly.Msg.LISTS_GET_INDEX_LAST = "urtimu";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "a brìtiu (random)";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "fùlia";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Torrat su primu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Torrat s'elementu de su postu inditau de una lista. Postu #1 est po s'urtimu elementu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Torrat s'elementu de su postu inditau de una lista. #1 est po su primu elementu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Torrat s'urtimu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Torrat un'elementu a brìtiu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fùliat e torrat su primu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Fùliat e torrat s'elementu de su postu inditau de una lista. #1 est po s'urtimu elementu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Fùliat e torrat s'elementu de su postu inditau de una lista. #1 est po su primu elementu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fùliat e torrat s'urtimu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fùliat e torrat un'elementu a brìtiu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fùliat su primu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Fùliat s'elementu de su postu inditau de una lista. #1 est po s'urtimu elementu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Fùliat s'elementu de su postu inditau de una lista. #1 est po su primu elementu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fùliat s'urtimu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Fùliat unu elementu a brìtiu de una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "a # de sa fini";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "fintzas a #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "a s'urtimu";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "bogandi suta-lista de su primu";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "bogandi suta-lista de # de sa fini.";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "bogandi suta-lista de #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Fait una copia de sa parti inditada de sa lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "circa prima ocasioni de s'item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "circa urtima ocasioni de s'item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Torrat s'indixi de sa primu/urtima ocasioni de s'item in sa lista. Torrat 0 si s'item non s'agatat.";
Blockly.Msg.LISTS_INLIST = "in lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 est buidu";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Torrat berus si sa lista est buida.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longària de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Torrat sa longària de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "fait una lista cun item %1 repitiu %2 bortas";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Fait una lista cun unu numeru giau repitiu su tanti de is bortas inditadas.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "a";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "inserta a";
Blockly.Msg.LISTS_SET_INDEX_SET = "imposta";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insertat s'elementu a su cumintzu de sa lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Insertat s'elementu in su postu inditau de una lista. Postu #1 est po s'urtimu elementu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Insertat s'elementu in su postu inditau in una lista. Postu #1 est po su primu elementu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Aciungit s'elementu a sa fini de sa lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Aciungit s'elementu a brítiu in sa lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Impostat su primu elementu in una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Impostat s'elementu in su postu inditau de una lista. Postu #1 est po s'urtimu elementu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Impostat s'elementu in su postu inditau de una lista. Postu 1 est po su primu elementu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Impostat s'urtimu elementu in una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Impostat unu elementu random in una lista.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "fai una lista de unu testu";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "fai unu testu de una lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Auni una lista de testus in d-unu sceti, ponendi separadoris.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividi su testu in un'elencu de testus, firmendi po dònnia separadori.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "cun  separadori";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "frassu";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Torrat berus o frassu.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "berus";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Torrat berus si is inputs funt unu uguali a s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Torrat berus si su primu input est prus mannu de s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Torrat berus si su primu input est prus mannu o uguali a s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Torrat berus si su primu input est prus piticu de s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Torrat berus si su primu input est prus piticu o uguali a s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Torrat berus si is inputs non funt unu uguali a s'àteru.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "non %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Torrat berus si s'input est frassu. Torrat frassu si s'input est berus.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Torrat null.";
Blockly.Msg.LOGIC_OPERATION_AND = "and";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "or";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Torrat berus si ambos is inputs funt berus.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Torrat berus si assumancu unu de is inputs est berus.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "cumpròa";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si frassu";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si berus";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "‎Cumproa sa cunditzioni in 'cumproa'. Si sa cunditzioni est berus, torrat su valori 'si berus'; sinuncas torrat su valori 'si frassu'.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Torrat sa summa de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Torrat su cuotzienti de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Torrat sa diferèntzia de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Torrat su produtu de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Torrat su primu numeru artziau a sa potenza de su segundu nùmeru.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "muda %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Aciungi unu numeru a sa variabili '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Torrat una de is costantis comunas: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), o ∞ (infiniu).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "custringi %1 de %2 a %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Custringi unu numeru aintru de is liminaxus giaus (cumprendius).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "fait a ddu dividi po";
Blockly.Msg.MATH_IS_EVEN = "est paris";
Blockly.Msg.MATH_IS_NEGATIVE = "est negativu";
Blockly.Msg.MATH_IS_ODD = "est dísparu";
Blockly.Msg.MATH_IS_POSITIVE = "est positivu";
Blockly.Msg.MATH_IS_PRIME = "est primu";
Blockly.Msg.MATH_IS_TOOLTIP = "Cumprova si unu numeru est paris, dìsparis, primu, intreu, positivu, negativu o si fait a ddu dividi po unu numeru giau. Torrat berus o frassu.";
Blockly.Msg.MATH_IS_WHOLE = "est intreu";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "arrestu de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Torrat s'arrestu de sa divisioni de duus numerus.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Unu numeru";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "mèdia de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "massimu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medianu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "unu item a brìtiu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "deviadura standard de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma sa lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Torrat sa mèdia (aritimètica) de is valoris de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Torrat su numeru prus mannu de sa lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Torrat su numeru medianu de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Torrat su numeru prus piticu de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Torrat una lista de is itams prus frecuentis de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Torrat unu item a brìtiu de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Torrat sa deviadura standard de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Torrat sa suma de totu is numerus de sa lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "una fratzioni a brìtiu";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Torrat una fratzioni a brìtiu intra 0.0 (cumpresu) e 1.0 (bogau).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "numeru intreu a brítiu de %1 a %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Torrat unu numeru intreu a brìtiu intra duus nùmerus giaus (cumpresus).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arretunda";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arretunda faci a bàsciu.";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "Arretunda faci a susu";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arretunda unu numeru faci a susu o faci a bàsciu.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "assolutu";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "arraxina cuadra";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Torrat su valori assolútu de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Torrat (e) a sa potèntzia de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Torrat su logaritmu naturali de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Torrat su logaritmu a basi 10 de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Torrat su valori negau de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Torrat (10) a sa potèntzia de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Torrat s'arraxina cuadra de unu numeru.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Torrat su arccosinu de unu numeru.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Torrat su arcsinu de unu numeru.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Torrat su arctangenti de unu numeru.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Torrat su cosinu de unu gradu (no radianti).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Torrat su sinu de unu gradu (no radianti).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Torrat sa tangenti de unu gradu (no radianti).";
Blockly.Msg.ME = "Deo";
Blockly.Msg.NEW_VARIABLE = "Variabili noa...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nòmini de sa variabili noa:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permiti decraratzionis";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Arròllia sa funtzione '%1' cuncordada dae s'impitadore.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Arròllia sa funtzione '%1' cuncordada dae s'impitadore e imprea s'output suu.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "cun";
Blockly.Msg.PROCEDURES_CREATE_DO = "Ingenerau'%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "fait calincuna cosa";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "po";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Fait una funtzioni chena output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "torrat";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Fait una funtzioni cun output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Amonestu: Custa funtzioni tenit parametrus duplicaus.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Marca sa definitzioni de funtzioni.";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si unu valori est berus, tandu torrat unu segundu valori.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Amonestu: Custu brocu ddu podis ponni sceti aintru de una funtzioni.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nomini input:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Aciungi un input a sa funtzioni.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Aciungi, fùlia, o assenta is inputs a custa funtzioni.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Fùlia unu cumentu";
Blockly.Msg.RENAME_VARIABLE = "Muda nòmini a variabili...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "A is variabilis '%1' muda nòmini a:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "acciungi su testu";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Aciungit testu a sa variàbili '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúdu";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "cun Primu lìtera a Mauschínu";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a mauschínu";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Torrat una copia de su testu inditau mudendi mauschínu/minúdu.";
Blockly.Msg.TEXT_CHARAT_FIRST = "piga sa prima lìtera";
Blockly.Msg.TEXT_CHARAT_FROM_END = "piga sa lìtera # de sa fini";
Blockly.Msg.TEXT_CHARAT_FROM_START = "piga sa lìtera #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in su testu";
Blockly.Msg.TEXT_CHARAT_LAST = "piga s'urtima lìtera";
Blockly.Msg.TEXT_CHARAT_RANDOM = "piga una lìtera a brìtiu";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Torrat sa lìtera de su postu giau.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Acciungi unu item a su testu.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "auni a pari";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Aciungi, fùlia, o assenta is partis po torrai a sètiu custu brocu de testu.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "a sa lìtera # de sa fini";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "a sa lìtera #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "a s'urtima lìtera";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in su testu";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "piga suta-stringa de sa primu lìtera";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "piga suta-stringa de sa lìtera # fintzas a fini";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "piga suta-stringa de sa lìtera #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Torrat su testu inditau.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in su testu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "circa prima ocasioni de su testu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "circa urtima ocasioni de su testu";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Torrat s'indixi de sa primu/urtima ocasioni de su primu testu in su segundu testu. Torrat 0 si su testu no ddu agatat.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est buidu";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Torrat berus si su testu giau est buidu.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "scri testu cun";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Fait unu testu ponendi a pari parigas de items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longària de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Torrat su numeru de lìteras (cun is spàtzius) in su testu giau.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "scri %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Scri su testu, numeru o àteru valori.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Pregonta unu nùmeru a s'impitadore.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Pregonta testu a s'impitadore.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "pregonta po unu numeru";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "pregonta po su testu";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una lìtera, paràula, o linia de testu.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "bogat spàtzius de ambus càbudus de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "bogat spàtzius de su càbudu de manca de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "bogat spàtzius de su càbudu de dereta de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Torrat una copia de su testu bogaus is spàtzius de unu o de ambus is càbudus.";
Blockly.Msg.TODAY = "Oe";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Fait 'imposta %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Torrat su valori de custa variabili.";
Blockly.Msg.VARIABLES_SET = "imposta %1 a %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Fait 'piga %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Imposta custa variabili uguali a s'input.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "read analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE = "set analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED = "set built-in LED";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";  // untranslated
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";  // untranslated
Blockly.Msg.ARD_DEFINE = "Define";  // untranslated
Blockly.Msg.ARD_DIGITALREAD = "read digital pin#";  // untranslated
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE = "set digitial pin#";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";  // untranslated
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";  // untranslated
Blockly.Msg.ARD_HIGH = "HIGH";  // untranslated
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";  // untranslated
Blockly.Msg.ARD_LOW = "LOW";  // untranslated
Blockly.Msg.ARD_MAP = "Map Value";  // untranslated
Blockly.Msg.ARD_MAP_FROMMAX = "from Max";  // untranslated
Blockly.Msg.ARD_MAP_FROMMIN = "from Min";  // untranslated
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from [0-1024] to another.";  // untranslated
Blockly.Msg.ARD_MAP_TOMAX = "to Max";  // untranslated
Blockly.Msg.ARD_MAP_TOMIN = "to Min";  // untranslated
Blockly.Msg.ARD_MAP_VAL = "value to [0-";  // untranslated
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";  // untranslated
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";  // untranslated
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";  // untranslated
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";  // untranslated
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";  // untranslated
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";  // untranslated
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";  // untranslated
Blockly.Msg.ARD_SERIAL_BPS = "bps";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT = "print";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "add new line";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";  // untranslated
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";  // untranslated
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";  // untranslated
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE = "set SERVO from Pin";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";  // untranslated
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";  // untranslated
Blockly.Msg.ARD_SPI_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";  // untranslated
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";  // untranslated
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";  // untranslated
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";  // untranslated
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";  // untranslated
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";  // untranslated
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";  // untranslated
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_STEPS = "steps";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";  // untranslated
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";  // untranslated
Blockly.Msg.ARD_TIME_DELAY = "wait";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";  // untranslated
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";  // untranslated
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";  // untranslated
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MS = "milliseconds";  // untranslated
Blockly.Msg.ARD_TONEFREQ = "at frequency";  // untranslated
Blockly.Msg.ARD_TONE_FREQ = "frequency";  // untranslated
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";  // untranslated
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";  // untranslated
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TYPE_ARRAY = "Array";  // untranslated
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";  // untranslated
Blockly.Msg.ARD_TYPE_CHAR = "Character";  // untranslated
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";  // untranslated
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";  // untranslated
Blockly.Msg.ARD_TYPE_LONG = "Large Number";  // untranslated
Blockly.Msg.ARD_TYPE_NULL = "Null";  // untranslated
Blockly.Msg.ARD_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";  // untranslated
Blockly.Msg.ARD_TYPE_TEXT = "Text";  // untranslated
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";  // untranslated
Blockly.Msg.ARD_VAR_AS = "as";  // untranslated
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";  // untranslated
Blockly.Msg.ARD_WRITE_TO = "to";  // untranslated
Blockly.Msg.NEW_INSTANCE = "New instance...";  // untranslated
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";  // untranslated
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";  // untranslated
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";  // untranslated
Blockly.Msg.cases_add = "Case";  // untranslated
Blockly.Msg.cases_condition = "Case (Variable) = ";  // untranslated
Blockly.Msg.cases_do = "Do";  // untranslated
Blockly.Msg.cases_switch = "Variable";  // untranslated
Blockly.Msg.senseBox_LoRa_app_id = "Application EUI (lsb)";  // untranslated
Blockly.Msg.senseBox_LoRa_app_key = "App Key (msb)";  // untranslated
Blockly.Msg.senseBox_LoRa_appskey_id = "App Session Key (msb)";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_alt = "Altitude";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_analog = "Analog Value";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_analog_tip = "Send a value with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_channel = "Channel";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_gps_tip = "Send GPS Data";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_gyros_tip = "Send a value from the Gyroscope";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_humidity = "Humidity";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_humidity_tip = "Send temperature with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_lat = "Latitude";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_lng = "Longitude";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_luminosity = "Luminosity";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_luminosity_tip = "Send luminosity";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_pressure = "Pressure";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_pressure_tip = "Send pressure with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_temperature = "Temperature";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_temperature_tip = "Send temperature with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_tip = "Send Data as Cayenne Payload Format";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_x = "X Value";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_y = "Y Value";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_z = "Z Value";  // untranslated
Blockly.Msg.senseBox_LoRa_connect = "Send to TTN";  // untranslated
Blockly.Msg.senseBox_LoRa_devaddr_id = "Device Adress";  // untranslated
Blockly.Msg.senseBox_LoRa_device_id = "Device EUI (lsb)";  // untranslated
Blockly.Msg.senseBox_LoRa_init_abp_tip = "Initialise the LoRa tranismission. Copy ID's as lsb";  // untranslated
Blockly.Msg.senseBox_LoRa_init_otaa_tip = "Initialise the LoRa tranismission. Copy ID's as lsb";  // untranslated
Blockly.Msg.senseBox_LoRa_interval = "Transmission interval in minutes";  // untranslated
Blockly.Msg.senseBox_LoRa_message_tip = "Send a message with LoRa";  // untranslated
Blockly.Msg.senseBox_LoRa_nwskey_id = "Network Session Key (msb)";  // untranslated
Blockly.Msg.senseBox_LoRa_send_cayenne = "Send as Cayenne Payload";  // untranslated
Blockly.Msg.senseBox_LoRa_send_message = "Send as Lora Message";  // untranslated
Blockly.Msg.senseBox_LoRa_sensor_tip = "Send a value with a specific number of bytes";  // untranslated
Blockly.Msg.senseBox_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.senseBox_basic_blue  = "Blue";  // untranslated
Blockly.Msg.senseBox_basic_green  = "Gree";  // untranslated
Blockly.Msg.senseBox_basic_red  = "Red";  // untranslated
Blockly.Msg.senseBox_basic_state  = "Status";  // untranslated
Blockly.Msg.senseBox_bme680 = "Environmental sensor (BME680)";  // untranslated
Blockly.Msg.senseBox_bme680_tip = "Returns values from the BME680";  // untranslated
Blockly.Msg.senseBox_bme680_warning = "Warning. Gas (VOC) cannot be measured simultaneously with other parameters.";  // untranslated
Blockly.Msg.senseBox_bme_breatheVocEquivalent = "Breathe VOC Equivalent";  // untranslated
Blockly.Msg.senseBox_bme_co2 = "CO2 Equivalent";  // untranslated
Blockly.Msg.senseBox_bme_iaq = "Indoor Air Quality (IAQ)";  // untranslated
Blockly.Msg.senseBox_bme_iaq_accuracy = "Calibration Value";  // untranslated
Blockly.Msg.senseBox_bme_tip = "Returns values from the BME680";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer  = "Accelerometer";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction = "Direction";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_total = "Total";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_x = "X-Axis";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_y = "Y-Axis";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_z = "Z-Axis";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range = "Range";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_16g = "16g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_2g = "2g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_4g = "4g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_8g = "8g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_tip  = "Measuring the acceleration";  // untranslated
Blockly.Msg.senseBox_bmx055_compass = "Compass";  // untranslated
Blockly.Msg.senseBox_bmx055_compass_tip  = "Gives the ";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope  = "Gyroscope";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope_tip  = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_x  = "X-Direction";  // untranslated
Blockly.Msg.senseBox_bmx055_y  = "Y-Direction";  // untranslated
Blockly.Msg.senseBox_button  = "Button";  // untranslated
Blockly.Msg.senseBox_button_isPressed = "is Pressed";  // untranslated
Blockly.Msg.senseBox_button_switch = "as Switch";  // untranslated
Blockly.Msg.senseBox_button_tip  = "Button";  // untranslated
Blockly.Msg.senseBox_button_wasPressed = "was Pressed";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay  = "Initialize Display";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay_tip  = "Starts the display";  // untranslated
Blockly.Msg.senseBox_display_black  = "Black";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay  = "Clear Display";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay_tip  = "Clear the display content";  // untranslated
Blockly.Msg.senseBox_display_color  = "Font color";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_dimension = "Unit";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_show = "Show Measurements";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_tip = "Show two measurements with title and dimension on the display";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_title = "Title";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_value = "Measurement";  // untranslated
Blockly.Msg.senseBox_display_filled = "filled";  // untranslated
Blockly.Msg.senseBox_display_plotDisplay  = "Plot Diagram";  // untranslated
Blockly.Msg.senseBox_display_plotTimeFrame = "TimeFrame";  // untranslated
Blockly.Msg.senseBox_display_plotTitle = "Title";  // untranslated
Blockly.Msg.senseBox_display_plotXLabel  = "X-Axis Label";  // untranslated
Blockly.Msg.senseBox_display_plotXRange1  = "X-Range Begin";  // untranslated
Blockly.Msg.senseBox_display_plotXRange2  = "X-Range End";  // untranslated
Blockly.Msg.senseBox_display_plotXTick  = "X-Tick";  // untranslated
Blockly.Msg.senseBox_display_plotYLabel  = "Y-Axis Label";  // untranslated
Blockly.Msg.senseBox_display_plotYRange1 = "Y-Range Begin";  // untranslated
Blockly.Msg.senseBox_display_plotYRange2 = "Y-Range End";  // untranslated
Blockly.Msg.senseBox_display_plotYTick  = "Y-Tick";  // untranslated
Blockly.Msg.senseBox_display_printDisplay  = "Write Text/Number";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_tip  = "Prints Values to the Display, set X and Y Location";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_value  = "value";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_x  = "x-coordinates";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_y  = "y-coordinates";  // untranslated
Blockly.Msg.senseBox_display_setSize  = "set font size to";  // untranslated
Blockly.Msg.senseBox_display_setSize_tip  = "Change the font size. Set a Value between 1-10.";  // untranslated
Blockly.Msg.senseBox_display_white  = "White";  // untranslated
Blockly.Msg.senseBox_foto  = "Light Dependent Resistor";  // untranslated
Blockly.Msg.senseBox_foto_tip  = "simple light depending resistor, gives values between 0 and 1023";  // untranslated
Blockly.Msg.senseBox_gas = "Gas (VOC)";  // untranslated
Blockly.Msg.senseBox_gps_alt = "altitude";  // untranslated
Blockly.Msg.senseBox_gps_begin = "initialize GPS";  // untranslated
Blockly.Msg.senseBox_gps_begin_tip = "initialize GPS Sensor";  // untranslated
Blockly.Msg.senseBox_gps_date = "date";  // untranslated
Blockly.Msg.senseBox_gps_getValues = "GPS-Module";  // untranslated
Blockly.Msg.senseBox_gps_getValues_tip = "gets the specific Value from the GPS Sensor";  // untranslated
Blockly.Msg.senseBox_gps_lat = "latitude";  // untranslated
Blockly.Msg.senseBox_gps_lng = "longitude";  // untranslated
Blockly.Msg.senseBox_gps_speed = "speed";  // untranslated
Blockly.Msg.senseBox_gps_time = "time";  // untranslated
Blockly.Msg.senseBox_gps_timeStamp = "timestamp (RFC 3339)";  // untranslated
Blockly.Msg.senseBox_html_body = "<body>";  // untranslated
Blockly.Msg.senseBox_html_body_end = "</body>";  // untranslated
Blockly.Msg.senseBox_html_document = "HTML";  // untranslated
Blockly.Msg.senseBox_html_document_tip = "A block for generating a HTML document.";  // untranslated
Blockly.Msg.senseBox_html_general_tag_tip = "A general HTML tag building block.";  // untranslated
Blockly.Msg.senseBox_html_header = "<head>";  // untranslated
Blockly.Msg.senseBox_html_header_end = "</head>";  // untranslated
Blockly.Msg.senseBox_http_method = "Method";  // untranslated
Blockly.Msg.senseBox_http_method_tip = "Method of the current HTTP request";  // untranslated
Blockly.Msg.senseBox_http_not_found = "404 Not found";  // untranslated
Blockly.Msg.senseBox_http_not_found_tip = "Send a predefined 404 HTTP response.";  // untranslated
Blockly.Msg.senseBox_http_on_client_connect = "If client is connected:";  // untranslated
Blockly.Msg.senseBox_http_on_client_connect_tip = "Checks if a client is connected and executes given statement in that case.";  // untranslated
Blockly.Msg.senseBox_http_protocol_version = "HTTP Version";  // untranslated
Blockly.Msg.senseBox_http_protocol_version_tip = "The HTTP Version of the current HTTP request";  // untranslated
Blockly.Msg.senseBox_http_success = "Succesful";  // untranslated
Blockly.Msg.senseBox_http_success_l2 = "HTTP reponse";  // untranslated
Blockly.Msg.senseBox_http_success_tip = "Send a successful HTTP response with content.";  // untranslated
Blockly.Msg.senseBox_http_uri = "URI";  // untranslated
Blockly.Msg.senseBox_http_uri_tip = "URI of requested resource of the current HTTP request";  // untranslated
Blockly.Msg.senseBox_http_user_agent = "User-Agent";  // untranslated
Blockly.Msg.senseBox_http_user_agent_tip = "The User-Agent send along with the current HTTP request";  // untranslated
Blockly.Msg.senseBox_hum  = "humidity in %";  // untranslated
Blockly.Msg.senseBox_hum_tip  = "Measures humidity in %";  // untranslated
Blockly.Msg.senseBox_init_http_server = "Initialize HTTP-Server";  // untranslated
Blockly.Msg.senseBox_init_http_server_tip = "Initializes a http server on the specified port.";  // untranslated
Blockly.Msg.senseBox_interval = "ms";  // untranslated
Blockly.Msg.senseBox_interval_timer = "Measuring interval";  // untranslated
Blockly.Msg.senseBox_interval_timer_tip = "Setup an Intervall";  // untranslated
Blockly.Msg.senseBox_ip_address = "IP-Address";  // untranslated
Blockly.Msg.senseBox_ip_address_tip = "Returns the IP address as a string.";  // untranslated
Blockly.Msg.senseBox_ir  = "infrared distance sensor";  // untranslated
Blockly.Msg.senseBox_ir_tip  = "infrared distance sensor can measure the distance between 10 and 80 cm";  // untranslated
Blockly.Msg.senseBox_led  = "LED connected to digital";  // untranslated
Blockly.Msg.senseBox_led_tip  = "simple LED. Don't forget the resistor";  // untranslated
Blockly.Msg.senseBox_light  = "Illuminance in Lux";  // untranslated
Blockly.Msg.senseBox_lux  = "lightsensor";  // untranslated
Blockly.Msg.senseBox_lux_tip  = "Light Sensor can measure the illuminance in lux";  // untranslated
Blockly.Msg.senseBox_measurement = "Measurement";  // untranslated
Blockly.Msg.senseBox_measurements = "Measurements";  // untranslated
Blockly.Msg.senseBox_off  = "off";  // untranslated
Blockly.Msg.senseBox_on  = "on";  // untranslated
Blockly.Msg.senseBox_osem_access_token = "API Key";  // untranslated
Blockly.Msg.senseBox_osem_connection  = "Connect to openSenseMap";  // untranslated
Blockly.Msg.senseBox_osem_connection_tip  = "";  // untranslated
Blockly.Msg.senseBox_osem_exposure = "Type";  // untranslated
Blockly.Msg.senseBox_osem_host = "opensensemap.org";  // untranslated
Blockly.Msg.senseBox_osem_host_workshop = "workshop.opensensemap.org";  // untranslated
Blockly.Msg.senseBox_osem_mobile = "Mobile";  // untranslated
Blockly.Msg.senseBox_osem_restart = "Restart if device was disconnected?";  // untranslated
Blockly.Msg.senseBox_osem_stationary = "Stationary";  // untranslated
Blockly.Msg.senseBox_output_filename  = "filename";  // untranslated
Blockly.Msg.senseBox_output_format  = "format:";  // untranslated
Blockly.Msg.senseBox_output_linebreak  = "linebreak";  // untranslated
Blockly.Msg.senseBox_output_networkid  = "networkID";  // untranslated
Blockly.Msg.senseBox_output_password  = "Password";  // untranslated
Blockly.Msg.senseBox_output_safetosd  = "safe to sd";  // untranslated
Blockly.Msg.senseBox_output_safetosd_tip  = "Save Measurment to SD-Card";  // untranslated
Blockly.Msg.senseBox_output_serialprint  = "Print on Serial Monitor";  // untranslated
Blockly.Msg.senseBox_output_timestamp  = "timestamp";  // untranslated
Blockly.Msg.senseBox_piezo_tip  = "simple piezo to make sound";  // untranslated
Blockly.Msg.senseBox_poti  = "Potentiometer";  // untranslated
Blockly.Msg.senseBox_poti_tip  = "Potentiometer";  // untranslated
Blockly.Msg.senseBox_pressure  = "Airpressure in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_referencePressure = "Pressure at Sea Level";  // untranslated
Blockly.Msg.senseBox_pressure_referencePressure_dim = "hPa";  // untranslated
Blockly.Msg.senseBox_pressure_sensor  = "Airpressure/Temperature Sensor (BMP280)";  // untranslated
Blockly.Msg.senseBox_pressure_tip  = "airpressure sensor can measure the airpressure in Pa";  // untranslated
Blockly.Msg.senseBox_rgb_led  = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_rgb_led_tip  = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_scd30 = "CO2 Sensor (Sensirion SCD30)";  // untranslated
Blockly.Msg.senseBox_scd_co2 = "CO2 in ppm";  // untranslated
Blockly.Msg.senseBox_scd_tip = "Returns value of the CO2 Sensor";  // untranslated
Blockly.Msg.senseBox_sd_create_file  = "Create file on SD-Card";  // untranslated
Blockly.Msg.senseBox_sd_decimals = "decimals";  // untranslated
Blockly.Msg.senseBox_sd_open_file  = "Open a file from SD-Card";  // untranslated
Blockly.Msg.senseBox_sd_web_readHTML = "Read HTML from SD Card";  // untranslated
Blockly.Msg.senseBox_sd_write_file  = " Write Data to SD-Card";  // untranslated
Blockly.Msg.senseBox_sds011  = "Fine Particular Sensor";  // untranslated
Blockly.Msg.senseBox_sds011_dimension  = "in µg/m³ at";  // untranslated
Blockly.Msg.senseBox_sds011_pm10  = "PM10";  // untranslated
Blockly.Msg.senseBox_sds011_pm25  = "PM2.5";  // untranslated
Blockly.Msg.senseBox_sds011_serial1  = "Serial1";  // untranslated
Blockly.Msg.senseBox_sds011_serial2  = "Serial2";  // untranslated
Blockly.Msg.senseBox_sds011_tip  = "Measuring the fine particular concentration";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem = "Send measurement and location to openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem_tip = "Send Value and Location to openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem  = "Send measurement to openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem_tip  = "sends the measurement to openSenseMap. Make shure to enter the correct BoxID and SensorID";  // untranslated
Blockly.Msg.senseBox_sensor  = "Sensors";  // untranslated
Blockly.Msg.senseBox_serial_tip  = "prints the values to the serial monitor in the arduino IDE. Good way to have a fast and easy feedback for your programm";  // untranslated
Blockly.Msg.senseBox_soil = "Soil Moisture";  // untranslated
Blockly.Msg.senseBox_sound  = "Microphone";  // untranslated
Blockly.Msg.senseBox_sound_tip  = "This block returns the measured value of the microphone in volts.";  // untranslated
Blockly.Msg.senseBox_soundsensor_dfrobot = "Soundsensor";  // untranslated
Blockly.Msg.senseBox_tag_first_mutator_tip = "Mandatory children to this block.";  // untranslated
Blockly.Msg.senseBox_tag_optional_mutator_tip = "Add more children to the block.";  // untranslated
Blockly.Msg.senseBox_telegram_do = "Telegram do";  // untranslated
Blockly.Msg.senseBox_telegram_do_on_message = "on message";  // untranslated
Blockly.Msg.senseBox_telegram_init = "Initialize Telegram Bot";  // untranslated
Blockly.Msg.senseBox_telegram_message = "Message";  // untranslated
Blockly.Msg.senseBox_telegram_send = "Send Message";  // untranslated
Blockly.Msg.senseBox_telegram_token = "Token";  // untranslated
Blockly.Msg.senseBox_temp  = "Temperature in °C";  // untranslated
Blockly.Msg.senseBox_temp_hum  = "Temperature/Humidity Sensor (HDC1080)";  // untranslated
Blockly.Msg.senseBox_temp_hum_tip  = "Sensor measuring temperature and humidity";  // untranslated
Blockly.Msg.senseBox_ultrasonic  = "Ultrasonic distance sensor at Port";  // untranslated
Blockly.Msg.senseBox_ultrasonic_echo = "Echo";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.senseBox_ultrasonic_tip  = "ultrasonic distance sensor";  // untranslated
Blockly.Msg.senseBox_ultrasonic_trigger = "Trigger";  // untranslated
Blockly.Msg.senseBox_uv  = "UV-Light in µW/cm²";  // untranslated
Blockly.Msg.senseBox_uv_light  = "Light Visible + UV";  // untranslated
Blockly.Msg.senseBox_uv_light_tip  = "Sensor measuring the UV-light and the illuminance";  // untranslated
Blockly.Msg.senseBox_value  = "value:";  // untranslated
Blockly.Msg.senseBox_watertemperature = "Water Temperature";  // untranslated
Blockly.Msg.senseBox_wifi_connect = "Connect to Wifi";  // untranslated
Blockly.Msg.senseBox_wifi_ssid = "Networkname";  // untranslated
Blockly.Msg.senseBox_wifi_startap = "Initialize Wifi Access Point";  // untranslated
Blockly.Msg.senseBox_wifi_tip  = "Establishes a wifi connection";  // untranslated
Blockly.Msg.senseBox_windspeed = "Windspeed";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led = "Set ";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_brightness = "Brightness";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_color = "Color";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_init = "Initialise RGB-LED (WS2818)";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_number = "Number of RGB-LEDs";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_pin = "at Pin:";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_position = "Position";  // untranslated
Blockly.Msg.sensebox_display_drawRectangle = "Draw Rectangle";  // untranslated
Blockly.Msg.sensebox_display_drawRectangle_height = "height";  // untranslated
Blockly.Msg.sensebox_display_drawRectangle_width = "width";  // untranslated
Blockly.Msg.sensebox_display_fillCircle = "Draw Point";  // untranslated
Blockly.Msg.sensebox_display_fillCircle_radius = "Radius";  // untranslated
Blockly.Msg.sensebox_display_show  = "Print on Display";  // untranslated
Blockly.Msg.sensebox_display_show_tip  = "Print on Display";  // untranslated
Blockly.Msg.sensebox_sd_filename = "data";  // untranslated
Blockly.Msg.sensebox_soil_smt50 = "Soil Moisture and Temperature (SMT50)";  // untranslated
Blockly.Msg.sensebox_web_readHTML_filename = "File:";  // untranslated
