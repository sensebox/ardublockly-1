// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.sq');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Vendos nje Koment";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Ndrysho Vlerat:";
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";  // untranslated
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Mbyll blloqet";
Blockly.Msg.COLLAPSE_BLOCK = "Mbyll bllokun";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "Ngjyra 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "Ngjyra 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "Perpjesetim";
Blockly.Msg.COLOUR_BLEND_TITLE = "Përzierje";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Perzien dy ngjyra së bashku me një raport të dhënë (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "http://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Zgjidh nje ngjyre nga nje game ngjyrash.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "ngjyre e rastesishme";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Zgjidhni një ngjyrë në mënyrë të rastësishme.";
Blockly.Msg.COLOUR_RGB_BLUE = "blu";
Blockly.Msg.COLOUR_RGB_GREEN = "jeshile";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "e kuqe";
Blockly.Msg.COLOUR_RGB_TITLE = "ngjyre me";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Krijo një ngjyrë me shumën e specifikuar te te kuqes, te gjelbëres, dhe bluse. Te gjitha vlerat duhet te jene mes 0 dhe 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "dil nga nje faze perseritese";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "vazhdo me elementin tjeter te nje faze perseritese";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Ndahu nga unaza.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Kapërce pjesën e mbetur të unazës, dhe vazhdo me ripërsëritjen tjetër.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Paralajmërim: Ky bllok mund të përdoret vetëm brenda unazës.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "per cdo produkt %1 ne liste %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Per cdo produkt ne nje \"liste\" \"vendos\" ndryshoren '%1' produktit, dhe pastaj bej disa deklarata.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "numero me %1 nga %2 ne %3 me nga %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Bëje identifikuesin \"%1\" që ta ketë vlerat prej numrit të fillimit deri tek numri i fundit, duke numëruar nga intervali i specifikuar, dhe ti bëj blloqet e specifikuara.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "\"Vendos\" \"kushtein\"tek \"pjesa\" \"if\"";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Shto një përfundues, që i mbërrin të gjitha kushtet në bllokun nëse.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Shto, fshij, ose rirregullo sektoret për ta rikonfiguruar këte bllok nëse.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "përndryshe";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "përndryshe nëse";
Blockly.Msg.CONTROLS_IF_MSG_IF = "nëse";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Nëse një vlerë është e saktë, atëherë ekzekuto disa fjali.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Nëse një vlerë është e saktë, atëherë ekzekuto bllokun e parë të fjalive. Përndryshe, ekzekuto bllokun e dytë të fjalive.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Nëse vlera e parë është e saktë, atëherë ekzekuto bllokun e parë të fjalive. Përndryshe, nëse vlera e dytë është e saktë, ekzekuto bllokun e dytë të fjalive.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Nëse vlera e parë është e saktë, atëherë ekzekuto bllokun e parë të fjalive. Përndryshe, nëse vlera e dytë është e saktë, ekzekuto bllokun e dytë të fjalive. Nëse asnjëra nga vlerat nuk është e saktë, ekzekuto bllokun e fundit të fjalive.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "ekzekuto";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "përsërit %1 herë";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ekzekuto disa fjali disa herë.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "përsërit derisa";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "përsërit përderisa";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Përderisa një vlerë është e pasaktë, atëherë ekzekuto disa fjali.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Përderisa një vlerë është e saktë, atëherë ekzekuto disa fjali.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Delete all %1 blocks?";  // untranslated
Blockly.Msg.DELETE_BLOCK = "Fshij bllokun";
Blockly.Msg.DELETE_X_BLOCKS = "Fshij %1 blloqe";
Blockly.Msg.DISABLE_BLOCK = "Çaktivizo bllokun";
Blockly.Msg.DUPLICATE_BLOCK = "Kopjo";
Blockly.Msg.ENABLE_BLOCK = "Aktivizo bllokun";
Blockly.Msg.EXPAND_ALL = "Zmadho blloqet";
Blockly.Msg.EXPAND_BLOCK = "Zmadho bllokun";
Blockly.Msg.EXTERNAL_INPUTS = "Hyrjet e jashtme";
Blockly.Msg.HELP = "Ndihmë";
Blockly.Msg.INLINE_INPUTS = "Hyrjet e brendshme";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "krijo një listë të zbrazët";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Kthen një listë, te gjatësisë 0, duke mos përmbajtur asnjë regjistrim të të dhënave";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "listë";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Shto, fshij, ose rirregullo sektoret për ta rikonfiguruar këtë bllok të listës.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "krijo listë me";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Shto një send në listë.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Krijo një listë me ndonjë numbër të sendeve.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "i parë";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# nga fundi";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "merr";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "merr dhe fshij";
Blockly.Msg.LISTS_GET_INDEX_LAST = "i fundit";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "i rastësishëm";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "largo";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Rikthen tek artikulli i par në list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Kthen një send në pozicionin e specifikuar në listë. #1 është sendi i fundit.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Kthen një send në pozicionin e specifikuar në listë. #1 është sendi i parë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Kthen artikullin e fundit në list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Kthen një send të rastësishëm në listë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fshin dhe kthen sendin e parë në listë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Fshin dhe kthen sendin në pozicionin e specifikuar në listë. #1 është sendi i fundit.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Fshin dhe kthen sendin në pozicionin e specifikuar në listë. #1 është sendi i parë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fshin dhe kthen sendin e fundit në listë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fshin dhe kthen një send të rastësishëm në listë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fshin sendin e parë në listë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Fshin sendin në pozicionin e specifikuar në listë. #1 është sendi i fundit.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Fshin sendin në pozicionin e specifikuar në listë. #1 është sendi i parë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fshin sendin e fundit në listë.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Kthen një send të rastësishëm në listë.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "tek # nga fundi";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "tek #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "tek i fundit";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "merr nën-listën nga i pari";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "merr nën listën nga # nga fundi";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "merr nën-listën nga #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Krijon në kopje të pjesës së specifikuar të listës.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "gjen ndodhjen e parë të sendit";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "gjen ndodhjen e fundit të sendit";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Kthen indeksin e ndodhjes së parë/fudit të sendit në listë. Kthen 0 nëse teksti nuk është gjetur.";
Blockly.Msg.LISTS_INLIST = "në listë";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 është e zbraztë";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Kthehet i saktë nëse lista është e zbraztë.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "gjatësia e %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Kthen gjatësinë e listës.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "krijo listën me sendin %1 të përsëritur %2 herë";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Krijon në listë qe përmban vlerën e dhënë të përsëritur aq herë sa numri i specifikuar.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "sikurse";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "fut në";
Blockly.Msg.LISTS_SET_INDEX_SET = "vendos";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Fut sendin në fillim të listës.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Fut sendin në pozicionin e specifikuar të listës. #1 është sendi i fundit.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Fut sendin në pozicionin e specifikuar të listës. #1 është sendi i parë.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Bashkangjit sendin në fund të listës.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Fut sendin rastësisht në listë.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Vendos sendin e parë në listë.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Vendos sendin ne pozicionin e specifikuar në listë. #1 është sendi i fundit.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Vendos sendin në pozicionin e specifikuar në listë. #1 është sendi i parë.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Vendos sendin e fundit në listë.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Vendos një send të rastësishëm në listë.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "e pasaktë";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Kthehet ose të saktë ose të pasaktë.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "e saktë";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "http://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Ktheje të saktë nëse të dy hyrjet janë të barabarta me njëra-tjetrën.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Ktheje të saktë nëse hyrja e parë është më e madhe se hyrja e dytë.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Ktheje të saktë nëse hyrja e parë është më e madhe ose e barabartë me hyrjen e dytë.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Ktheje të saktë nëse hyrja e parë është më e vogël se hyrja e dytë.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Ktheje të saktë nëse hyrja e parë është më e vogël ose e barabartë me hyrjen e dytë.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Ktheje të saktë nëse të dy hyrjet nuk janë të barabarta me njëra-tjetrën.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "jo %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Kthehet e saktë nëse hyrja është e pasaktë. Kthehet e pasaktë nëse hyrja është e saktë.";
Blockly.Msg.LOGIC_NULL = "pavlerë";
Blockly.Msg.LOGIC_NULL_HELPURL = "http://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Kthehet e pavlerë.";
Blockly.Msg.LOGIC_OPERATION_AND = "dhe";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "ose";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Kthehet të saktë nëse të dy hyrjet janë të sakta.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Kthehet e saktë nëse së paku njëra nga hyrjet është e saktë.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "http://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "nëse e pasaktë";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "nëse e saktë";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Kontrollo kushtin në 'test'. Nëse kushti është i saktë, kthen vlerën 'nëse e saktë'; përndryshe kthen vlerën 'nëse e pasaktë'.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "http://sq.wikipedia.org/wiki/Aritmetika";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Kthen shumën e dy numrave.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Kthen herësin e dy numrave.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Kthen ndryshimin e dy numrave.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Kthen produktin e dy numrave.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Kthen numrin e parë të ngritur në fuqinë e numrit të dytë.";
Blockly.Msg.MATH_CHANGE_HELPURL = "http://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "ndrysho %1 nga %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Shto një numër në ndryshoren '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "http://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Kthen një nga konstantet e përbashkëta: : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infiniti).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "detyro %1 e ulët %2 e lartë %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Vëni një numër që të jetë në mes të kufive të specifikuara(përfshirëse).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "është i pjestueshme me";
Blockly.Msg.MATH_IS_EVEN = "është çift";
Blockly.Msg.MATH_IS_NEGATIVE = "është negativ";
Blockly.Msg.MATH_IS_ODD = "është tek";
Blockly.Msg.MATH_IS_POSITIVE = "është pozitiv";
Blockly.Msg.MATH_IS_PRIME = "është prim";
Blockly.Msg.MATH_IS_TOOLTIP = "Kontrollo nëse një numër është çift, tek, prim, i plotë, pozitiv, negativ, ose nëse është i pjestueshëm me një numër të caktuar. Kthehet e saktë ose e pasaktë.";
Blockly.Msg.MATH_IS_WHOLE = "është i plotë";
Blockly.Msg.MATH_MODULO_HELPURL = "http://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "mbetësi i %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Kthen mbetësin nga pjestimi i dy numrave.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "x";
Blockly.Msg.MATH_NUMBER_HELPURL = "http://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Një numër.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "mesatarja e listës";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "numri më i madh i listës";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana e listës";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "numri më i ulët i listës";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modat e listës";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "send i rastësishëm i listës";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "devijimi standard i listës";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "mbledhja e listës";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Kthen mesatarën (kuptimi aritmetik) i vlerave numerike të listës.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Kthe numrin më të madh të listës.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Kthe numrin median të listës.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Kthe numrin me të vogël të listës.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Kthe listën e sendit(eve) më të zakonshme të listës.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Kthe një element të rastësishëm nga lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Kthe devijimin standard të listës.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Kthe shumën e të gjithë numrave të listës.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "http://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraksioni i rastësishëm";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Kthe fraksionin e rastësishëm në mes të 0.0 (përfshirëse) dhe 1.0 (jopërfshirëse).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "http://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "numër i plotë i rastësishëm nga %1 deri në %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Kthe një numër të plotë të rastësishëm të dy kufijve të specifikuar, të përfshirë.";
Blockly.Msg.MATH_ROUND_HELPURL = "http://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "rrumbullakësimi";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "rrumbullakësimi i ulët";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "rrumbullakësimi i lartë";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Rrumbullakësimi i numrit të lartë ose të ulët.";
Blockly.Msg.MATH_SINGLE_HELPURL = "http://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolut";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "rrënja katrore";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Kthen vlerën absolute të një numri.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Kthen e në fuqinë e një numri.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Kthen logaritmën natyrale të një numri.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Kthen 10 logaritmet bazë të një numri.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Kthe negacionin e një numri.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Kthen 10 në fuqinë e një numri.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Kthen rrënjën katrore të një numri.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acosinus";
Blockly.Msg.MATH_TRIG_ASIN = "asinus";
Blockly.Msg.MATH_TRIG_ATAN = "atangjentë";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "http://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Rikthe cos-1 e nje numeri.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Rikthe sin-1 e nje numeri.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Kthe tg-1 e nje numeri.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Kthe kosinusin e nje grade (jo ne radiant).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Kthe kosinusin e nje kendi (jo ne radiant).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Kthe tangentin e nje kendi (jo radiant).";
Blockly.Msg.ME = "Me";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Identifikatorë i ri...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Emri i identifikatorit të ri:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "me:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Lësho funksionin e definuar nga përdoruesi '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Lëho funksionin e definuar nga përdoruesi '%1' dhe përdor daljen e tij.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "me:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Krijo '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "bëj diqka";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "te";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Krijon një funksion pa dalje.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "rikthe";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Krijon një funksion me një dalje.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Paralajmërim: Ky funksion ka parametra të dyfishuar.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Thekso definicionin e funksionit";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Nëse një vlerë është e saktë, atëherë kthe një vlerë të dytë.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Paralajmërim: Ky bllok mund të përdoret vetëm brenda definicionit të funksionit.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Fut emrin:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "Informacioni i futur";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";  // untranslated
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Fshij komentin";
Blockly.Msg.RENAME_VARIABLE = "Ndrysho emrin variables...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Ndrysho emrin e te gjitha '%1' variablave ne :";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "shto tekst";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "ne";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "shto tekst tek varibla '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "me shkronja te vogla shtypi";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Fillimi me shkronje te madhe shtypi";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "me shkronja te medha shtypi";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Kthe nje kopje te tekstit ne nje rast te ndryshem.";
Blockly.Msg.TEXT_CHARAT_FIRST = "merr shkronjen e pare";
Blockly.Msg.TEXT_CHARAT_FROM_END = "merr shkronjen # nga fundi";
Blockly.Msg.TEXT_CHARAT_FROM_START = "merr shkronjen #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "ne tekst";
Blockly.Msg.TEXT_CHARAT_LAST = "merr shkronjen e fundit";
Blockly.Msg.TEXT_CHARAT_RANDOM = "merr nje shkronje te rastesishme";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Kthe nje shkronje nga nje pozicion i caktuar.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Shto nje gje ne tekst";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "bashkangjit";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Shto, fshij, ose rirregullo sektoret për ta rikonfiguruar këtë bllok teksti.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "ne shkronjen # nga fundi";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "ne shkronjen #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "tek shkronja e fundit";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "ne tekst";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "merr vlerat qe vazhdojne me shkronjen e pare";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "merr nenvargun nga shkronja # nga fundi";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "Merr nenvargun nga shkronja #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Pergjigjet me nje pjese te caktuar teksti.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "ne tekst";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "gjej rastisjen e pare te tekstit";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "gjej rastisjen e fundit te tekstit";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Pergjigjet me indeksin e pare/fundit te rastisjes se tekstit te pare ne tekstin e dyte. Pergjigjet me 0 ne qofte se teksti nuk u gjet.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 eshte bosh";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Kthehet e vertete neqoftese teksti i dhene eshte bosh.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "krijo tekst me";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Krijo nje pjese te tekstit duke bashkuar se bashku disa sende";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "gjatesi %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Pergjigjet me nje numer shkronjash (duke perfshire hapesire) ne tekstin e dhene.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "printo %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Printo tekstin e caktuar, numer ose vlere tjeter.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Kerkoji perdoruesit nje numer.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Kerkoji perdoruesit ca tekst.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "kerko nje numer me njoftim";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "kerko tekst me njoftim";
Blockly.Msg.TEXT_TEXT_HELPURL = "http://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Nje shkronje, fjale, ose rresht teksti.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "prit hapesirat nga te dyja anet";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "prit hapesirat nga ana e majte";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "prit hapesirat nga ana e djathte";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Pergjigju me nje kopje te tekstit me hapesira te fshira nga njera ane ose te dyja anet.";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "send";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Krijo 'vendos %1";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Pergjigjet me nje vlere te kesaj variable.";
Blockly.Msg.VARIABLES_SET = "vendos %1 ne %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Krijo 'merr %1";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Vendos kete variable te jete e barabarte me te dhenat ne hyrje.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "read analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE = "set analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED = "set built-in LED";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";  // untranslated
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";  // untranslated
Blockly.Msg.ARD_DEFINE = "Define";  // untranslated
Blockly.Msg.ARD_DIGITALREAD = "read digital pin#";  // untranslated
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE = "set digitial pin#";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";  // untranslated
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";  // untranslated
Blockly.Msg.ARD_HIGH = "HIGH";  // untranslated
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";  // untranslated
Blockly.Msg.ARD_LOW = "LOW";  // untranslated
Blockly.Msg.ARD_MAP = "Map Value";  // untranslated
Blockly.Msg.ARD_MAP_FROMMAX = "from Max";  // untranslated
Blockly.Msg.ARD_MAP_FROMMIN = "from Min";  // untranslated
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from [0-1024] to another.";  // untranslated
Blockly.Msg.ARD_MAP_TOMAX = "to Max";  // untranslated
Blockly.Msg.ARD_MAP_TOMIN = "to Min";  // untranslated
Blockly.Msg.ARD_MAP_VAL = "value to [0-";  // untranslated
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";  // untranslated
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";  // untranslated
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";  // untranslated
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";  // untranslated
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";  // untranslated
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";  // untranslated
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";  // untranslated
Blockly.Msg.ARD_SERIAL_BPS = "bps";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT = "print";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "add new line";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";  // untranslated
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";  // untranslated
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";  // untranslated
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE = "set SERVO from Pin";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";  // untranslated
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";  // untranslated
Blockly.Msg.ARD_SPI_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";  // untranslated
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";  // untranslated
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";  // untranslated
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";  // untranslated
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";  // untranslated
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";  // untranslated
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";  // untranslated
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_STEPS = "steps";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";  // untranslated
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";  // untranslated
Blockly.Msg.ARD_TIME_DELAY = "wait";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";  // untranslated
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";  // untranslated
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";  // untranslated
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MS = "milliseconds";  // untranslated
Blockly.Msg.ARD_TONEFREQ = "at frequency";  // untranslated
Blockly.Msg.ARD_TONE_FREQ = "frequency";  // untranslated
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";  // untranslated
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";  // untranslated
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TYPE_ARRAY = "Array";  // untranslated
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";  // untranslated
Blockly.Msg.ARD_TYPE_CHAR = "Character";  // untranslated
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";  // untranslated
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";  // untranslated
Blockly.Msg.ARD_TYPE_LONG = "Large Number";  // untranslated
Blockly.Msg.ARD_TYPE_NULL = "Null";  // untranslated
Blockly.Msg.ARD_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";  // untranslated
Blockly.Msg.ARD_TYPE_TEXT = "Text";  // untranslated
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";  // untranslated
Blockly.Msg.ARD_VAR_AS = "as";  // untranslated
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";  // untranslated
Blockly.Msg.ARD_WRITE_TO = "to";  // untranslated
Blockly.Msg.NEW_INSTANCE = "New instance...";  // untranslated
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";  // untranslated
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";  // untranslated
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";  // untranslated
Blockly.Msg.cases_add = "Case";  // untranslated
Blockly.Msg.cases_condition = "Case (Variable) = ";  // untranslated
Blockly.Msg.cases_do = "Do";  // untranslated
Blockly.Msg.cases_switch = "Variable";  // untranslated
Blockly.Msg.senseBox_LoRa_app_id = "Application EUI (lsb)";  // untranslated
Blockly.Msg.senseBox_LoRa_app_key = "App Key (msb)";  // untranslated
Blockly.Msg.senseBox_LoRa_appskey_id = "App Session Key (msb)";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_alt = "Altitude";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_analog = "Analog Value";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_analog_tip = "Send a value with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_channel = "Channel";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_gps_tip = "Send GPS Data";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_gyros_tip = "Send a value from the Gyroscope";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_humidity = "Humidity";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_humidity_tip = "Send temperature with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_lat = "Latitude";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_lng = "Longitude";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_luminosity = "Luminosity";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_luminosity_tip = "Send luminosity";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_pressure = "Pressure";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_pressure_tip = "Send pressure with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_temperature = "Temperature";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_temperature_tip = "Send temperature with one decimal";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_tip = "Send Data as Cayenne Payload Format";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_x = "X Value";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_y = "Y Value";  // untranslated
Blockly.Msg.senseBox_LoRa_cayenne_z = "Z Value";  // untranslated
Blockly.Msg.senseBox_LoRa_connect = "Send to TTN";  // untranslated
Blockly.Msg.senseBox_LoRa_devaddr_id = "Device Adress";  // untranslated
Blockly.Msg.senseBox_LoRa_device_id = "Device EUI (lsb)";  // untranslated
Blockly.Msg.senseBox_LoRa_init_abp_tip = "Initialise the LoRa tranismission. Copy ID's as lsb";  // untranslated
Blockly.Msg.senseBox_LoRa_init_otaa_tip = "Initialise the LoRa tranismission. Copy ID's as lsb";  // untranslated
Blockly.Msg.senseBox_LoRa_interval = "Transmission interval in minutes";  // untranslated
Blockly.Msg.senseBox_LoRa_message_tip = "Send a message with LoRa";  // untranslated
Blockly.Msg.senseBox_LoRa_nwskey_id = "Network Session Key (msb)";  // untranslated
Blockly.Msg.senseBox_LoRa_send_cayenne = "Send as Cayenne Payload";  // untranslated
Blockly.Msg.senseBox_LoRa_send_message = "Send as Lora Message";  // untranslated
Blockly.Msg.senseBox_LoRa_sensor_tip = "Send a value with a specific number of bytes";  // untranslated
Blockly.Msg.senseBox_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.senseBox_basic_blue  = "Blue";  // untranslated
Blockly.Msg.senseBox_basic_green  = "Gree";  // untranslated
Blockly.Msg.senseBox_basic_red  = "Red";  // untranslated
Blockly.Msg.senseBox_basic_state  = "Status";  // untranslated
Blockly.Msg.senseBox_bme680 = "Environmental sensor (BME680)";  // untranslated
Blockly.Msg.senseBox_bme680_tip = "Returns values from the BME680";  // untranslated
Blockly.Msg.senseBox_bme680_warning = "Warning. Gas (VOC) cannot be measured simultaneously with other parameters.";  // untranslated
Blockly.Msg.senseBox_bme_breatheVocEquivalent = "Breathe VOC Equivalent";  // untranslated
Blockly.Msg.senseBox_bme_co2 = "CO2 Equivalent";  // untranslated
Blockly.Msg.senseBox_bme_iaq = "Indoor Air Quality (IAQ)";  // untranslated
Blockly.Msg.senseBox_bme_iaq_accuracy = "Calibration Value";  // untranslated
Blockly.Msg.senseBox_bme_tip = "Returns values from the BME680";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer  = "Accelerometer";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction = "Direction";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_total = "Total";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_x = "X-Axis";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_y = "Y-Axis";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_direction_z = "Z-Axis";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range = "Range";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_16g = "16g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_2g = "2g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_4g = "4g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_range_8g = "8g";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_tip  = "Measuring the acceleration";  // untranslated
Blockly.Msg.senseBox_bmx055_compass = "Compass";  // untranslated
Blockly.Msg.senseBox_bmx055_compass_tip  = "Gives the ";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope  = "Gyroscope";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope_tip  = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_x  = "X-Direction";  // untranslated
Blockly.Msg.senseBox_bmx055_y  = "Y-Direction";  // untranslated
Blockly.Msg.senseBox_button  = "Button";  // untranslated
Blockly.Msg.senseBox_button_isPressed = "is Pressed";  // untranslated
Blockly.Msg.senseBox_button_switch = "as Switch";  // untranslated
Blockly.Msg.senseBox_button_tip  = "Button";  // untranslated
Blockly.Msg.senseBox_button_wasPressed = "was Pressed";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay  = "Initialize Display";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay_tip  = "Starts the display";  // untranslated
Blockly.Msg.senseBox_display_black  = "Black";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay  = "Clear Display";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay_tip  = "Clear the display content";  // untranslated
Blockly.Msg.senseBox_display_color  = "Font color";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_dimension = "Unit";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_show = "Show Measurements";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_tip = "Show two measurements with title and dimension on the display";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_title = "Title";  // untranslated
Blockly.Msg.senseBox_display_fastPrint_value = "Measurement";  // untranslated
Blockly.Msg.senseBox_display_filled = "filled";  // untranslated
Blockly.Msg.senseBox_display_plotDisplay  = "Plot Diagram";  // untranslated
Blockly.Msg.senseBox_display_plotTimeFrame = "TimeFrame";  // untranslated
Blockly.Msg.senseBox_display_plotTitle = "Title";  // untranslated
Blockly.Msg.senseBox_display_plotXLabel  = "X-Axis Label";  // untranslated
Blockly.Msg.senseBox_display_plotXRange1  = "X-Range Begin";  // untranslated
Blockly.Msg.senseBox_display_plotXRange2  = "X-Range End";  // untranslated
Blockly.Msg.senseBox_display_plotXTick  = "X-Tick";  // untranslated
Blockly.Msg.senseBox_display_plotYLabel  = "Y-Axis Label";  // untranslated
Blockly.Msg.senseBox_display_plotYRange1 = "Y-Range Begin";  // untranslated
Blockly.Msg.senseBox_display_plotYRange2 = "Y-Range End";  // untranslated
Blockly.Msg.senseBox_display_plotYTick  = "Y-Tick";  // untranslated
Blockly.Msg.senseBox_display_printDisplay  = "Write Text/Number";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_tip  = "Prints Values to the Display, set X and Y Location";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_value  = "value";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_x  = "x-coordinates";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_y  = "y-coordinates";  // untranslated
Blockly.Msg.senseBox_display_setSize  = "set font size to";  // untranslated
Blockly.Msg.senseBox_display_setSize_tip  = "Change the font size. Set a Value between 1-10.";  // untranslated
Blockly.Msg.senseBox_display_white  = "White";  // untranslated
Blockly.Msg.senseBox_foto  = "Light Dependent Resistor";  // untranslated
Blockly.Msg.senseBox_foto_tip  = "simple light depending resistor, gives values between 0 and 1023";  // untranslated
Blockly.Msg.senseBox_gas = "Gas (VOC)";  // untranslated
Blockly.Msg.senseBox_gps_alt = "altitude";  // untranslated
Blockly.Msg.senseBox_gps_begin = "initialize GPS";  // untranslated
Blockly.Msg.senseBox_gps_begin_tip = "initialize GPS Sensor";  // untranslated
Blockly.Msg.senseBox_gps_date = "date";  // untranslated
Blockly.Msg.senseBox_gps_getValues = "GPS-Module";  // untranslated
Blockly.Msg.senseBox_gps_getValues_tip = "gets the specific Value from the GPS Sensor";  // untranslated
Blockly.Msg.senseBox_gps_lat = "latitude";  // untranslated
Blockly.Msg.senseBox_gps_lng = "longitude";  // untranslated
Blockly.Msg.senseBox_gps_speed = "speed";  // untranslated
Blockly.Msg.senseBox_gps_time = "time";  // untranslated
Blockly.Msg.senseBox_gps_timeStamp = "timestamp (RFC 3339)";  // untranslated
Blockly.Msg.senseBox_html_body = "<body>";  // untranslated
Blockly.Msg.senseBox_html_body_end = "</body>";  // untranslated
Blockly.Msg.senseBox_html_document = "HTML";  // untranslated
Blockly.Msg.senseBox_html_document_tip = "A block for generating a HTML document.";  // untranslated
Blockly.Msg.senseBox_html_general_tag_tip = "A general HTML tag building block.";  // untranslated
Blockly.Msg.senseBox_html_header = "<head>";  // untranslated
Blockly.Msg.senseBox_html_header_end = "</head>";  // untranslated
Blockly.Msg.senseBox_http_method = "Method";  // untranslated
Blockly.Msg.senseBox_http_method_tip = "Method of the current HTTP request";  // untranslated
Blockly.Msg.senseBox_http_not_found = "404 Not found";  // untranslated
Blockly.Msg.senseBox_http_not_found_tip = "Send a predefined 404 HTTP response.";  // untranslated
Blockly.Msg.senseBox_http_on_client_connect = "If client is connected:";  // untranslated
Blockly.Msg.senseBox_http_on_client_connect_tip = "Checks if a client is connected and executes given statement in that case.";  // untranslated
Blockly.Msg.senseBox_http_protocol_version = "HTTP Version";  // untranslated
Blockly.Msg.senseBox_http_protocol_version_tip = "The HTTP Version of the current HTTP request";  // untranslated
Blockly.Msg.senseBox_http_success = "Succesful";  // untranslated
Blockly.Msg.senseBox_http_success_l2 = "HTTP reponse";  // untranslated
Blockly.Msg.senseBox_http_success_tip = "Send a successful HTTP response with content.";  // untranslated
Blockly.Msg.senseBox_http_uri = "URI";  // untranslated
Blockly.Msg.senseBox_http_uri_tip = "URI of requested resource of the current HTTP request";  // untranslated
Blockly.Msg.senseBox_http_user_agent = "User-Agent";  // untranslated
Blockly.Msg.senseBox_http_user_agent_tip = "The User-Agent send along with the current HTTP request";  // untranslated
Blockly.Msg.senseBox_hum  = "humidity in %";  // untranslated
Blockly.Msg.senseBox_hum_tip  = "Measures humidity in %";  // untranslated
Blockly.Msg.senseBox_init_http_server = "Initialize HTTP-Server";  // untranslated
Blockly.Msg.senseBox_init_http_server_tip = "Initializes a http server on the specified port.";  // untranslated
Blockly.Msg.senseBox_interval = "ms";  // untranslated
Blockly.Msg.senseBox_interval_timer = "Measuring interval";  // untranslated
Blockly.Msg.senseBox_interval_timer_tip = "Setup an Intervall";  // untranslated
Blockly.Msg.senseBox_ip_address = "IP-Address";  // untranslated
Blockly.Msg.senseBox_ip_address_tip = "Returns the IP address as a string.";  // untranslated
Blockly.Msg.senseBox_ir  = "infrared distance sensor";  // untranslated
Blockly.Msg.senseBox_ir_tip  = "infrared distance sensor can measure the distance between 10 and 80 cm";  // untranslated
Blockly.Msg.senseBox_led  = "LED connected to digital";  // untranslated
Blockly.Msg.senseBox_led_tip  = "simple LED. Don't forget the resistor";  // untranslated
Blockly.Msg.senseBox_light  = "Illuminance in Lux";  // untranslated
Blockly.Msg.senseBox_lux  = "lightsensor";  // untranslated
Blockly.Msg.senseBox_lux_tip  = "Light Sensor can measure the illuminance in lux";  // untranslated
Blockly.Msg.senseBox_measurement = "Measurement";  // untranslated
Blockly.Msg.senseBox_measurements = "Measurements";  // untranslated
Blockly.Msg.senseBox_off  = "off";  // untranslated
Blockly.Msg.senseBox_on  = "on";  // untranslated
Blockly.Msg.senseBox_osem_access_token = "API Key";  // untranslated
Blockly.Msg.senseBox_osem_connection  = "Connect to openSenseMap";  // untranslated
Blockly.Msg.senseBox_osem_connection_tip  = "";  // untranslated
Blockly.Msg.senseBox_osem_exposure = "Type";  // untranslated
Blockly.Msg.senseBox_osem_host = "opensensemap.org";  // untranslated
Blockly.Msg.senseBox_osem_host_workshop = "workshop.opensensemap.org";  // untranslated
Blockly.Msg.senseBox_osem_mobile = "Mobile";  // untranslated
Blockly.Msg.senseBox_osem_restart = "Restart if device was disconnected?";  // untranslated
Blockly.Msg.senseBox_osem_stationary = "Stationary";  // untranslated
Blockly.Msg.senseBox_output_filename  = "filename";  // untranslated
Blockly.Msg.senseBox_output_format  = "format:";  // untranslated
Blockly.Msg.senseBox_output_linebreak  = "linebreak";  // untranslated
Blockly.Msg.senseBox_output_networkid  = "networkID";  // untranslated
Blockly.Msg.senseBox_output_password  = "Password";  // untranslated
Blockly.Msg.senseBox_output_safetosd  = "safe to sd";  // untranslated
Blockly.Msg.senseBox_output_safetosd_tip  = "Save Measurment to SD-Card";  // untranslated
Blockly.Msg.senseBox_output_serialprint  = "Print on Serial Monitor";  // untranslated
Blockly.Msg.senseBox_output_timestamp  = "timestamp";  // untranslated
Blockly.Msg.senseBox_piezo_tip  = "simple piezo to make sound";  // untranslated
Blockly.Msg.senseBox_poti  = "Potentiometer";  // untranslated
Blockly.Msg.senseBox_poti_tip  = "Potentiometer";  // untranslated
Blockly.Msg.senseBox_pressure  = "Airpressure in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_referencePressure = "Pressure at Sea Level";  // untranslated
Blockly.Msg.senseBox_pressure_referencePressure_dim = "hPa";  // untranslated
Blockly.Msg.senseBox_pressure_sensor  = "Airpressure/Temperature Sensor (BMP280)";  // untranslated
Blockly.Msg.senseBox_pressure_tip  = "airpressure sensor can measure the airpressure in Pa";  // untranslated
Blockly.Msg.senseBox_rgb_led  = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_rgb_led_tip  = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_scd30 = "CO2 Sensor (Sensirion SCD30)";  // untranslated
Blockly.Msg.senseBox_scd_co2 = "CO2 in ppm";  // untranslated
Blockly.Msg.senseBox_scd_tip = "Returns value of the CO2 Sensor";  // untranslated
Blockly.Msg.senseBox_sd_create_file  = "Create file on SD-Card";  // untranslated
Blockly.Msg.senseBox_sd_decimals = "decimals";  // untranslated
Blockly.Msg.senseBox_sd_open_file  = "Open a file from SD-Card";  // untranslated
Blockly.Msg.senseBox_sd_web_readHTML = "Read HTML from SD Card";  // untranslated
Blockly.Msg.senseBox_sd_write_file  = " Write Data to SD-Card";  // untranslated
Blockly.Msg.senseBox_sds011  = "Fine Particular Sensor";  // untranslated
Blockly.Msg.senseBox_sds011_dimension  = "in µg/m³ at";  // untranslated
Blockly.Msg.senseBox_sds011_pm10  = "PM10";  // untranslated
Blockly.Msg.senseBox_sds011_pm25  = "PM2.5";  // untranslated
Blockly.Msg.senseBox_sds011_serial1  = "Serial1";  // untranslated
Blockly.Msg.senseBox_sds011_serial2  = "Serial2";  // untranslated
Blockly.Msg.senseBox_sds011_tip  = "Measuring the fine particular concentration";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem = "Send measurement and location to openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem_tip = "Send Value and Location to openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem  = "Send measurement to openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem_tip  = "sends the measurement to openSenseMap. Make shure to enter the correct BoxID and SensorID";  // untranslated
Blockly.Msg.senseBox_sensor  = "Sensors";  // untranslated
Blockly.Msg.senseBox_serial_tip  = "prints the values to the serial monitor in the arduino IDE. Good way to have a fast and easy feedback for your programm";  // untranslated
Blockly.Msg.senseBox_soil = "Soil Moisture";  // untranslated
Blockly.Msg.senseBox_sound  = "Microphone";  // untranslated
Blockly.Msg.senseBox_sound_tip  = "This block returns the measured value of the microphone in volts.";  // untranslated
Blockly.Msg.senseBox_soundsensor_dfrobot = "Soundsensor";  // untranslated
Blockly.Msg.senseBox_tag_first_mutator_tip = "Mandatory children to this block.";  // untranslated
Blockly.Msg.senseBox_tag_optional_mutator_tip = "Add more children to the block.";  // untranslated
Blockly.Msg.senseBox_telegram_do = "Telegram do";  // untranslated
Blockly.Msg.senseBox_telegram_do_on_message = "on message";  // untranslated
Blockly.Msg.senseBox_telegram_init = "Initialize Telegram Bot";  // untranslated
Blockly.Msg.senseBox_telegram_message = "Message";  // untranslated
Blockly.Msg.senseBox_telegram_send = "Send Message";  // untranslated
Blockly.Msg.senseBox_telegram_token = "Token";  // untranslated
Blockly.Msg.senseBox_temp  = "Temperature in °C";  // untranslated
Blockly.Msg.senseBox_temp_hum  = "Temperature/Humidity Sensor (HDC1080)";  // untranslated
Blockly.Msg.senseBox_temp_hum_tip  = "Sensor measuring temperature and humidity";  // untranslated
Blockly.Msg.senseBox_ultrasonic  = "Ultrasonic distance sensor at Port";  // untranslated
Blockly.Msg.senseBox_ultrasonic_echo = "Echo";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.senseBox_ultrasonic_tip  = "ultrasonic distance sensor";  // untranslated
Blockly.Msg.senseBox_ultrasonic_trigger = "Trigger";  // untranslated
Blockly.Msg.senseBox_uv  = "UV-Light in µW/cm²";  // untranslated
Blockly.Msg.senseBox_uv_light  = "Light Visible + UV";  // untranslated
Blockly.Msg.senseBox_uv_light_tip  = "Sensor measuring the UV-light and the illuminance";  // untranslated
Blockly.Msg.senseBox_value  = "value:";  // untranslated
Blockly.Msg.senseBox_watertemperature = "Water Temperature";  // untranslated
Blockly.Msg.senseBox_wifi_connect = "Connect to Wifi";  // untranslated
Blockly.Msg.senseBox_wifi_ssid = "Networkname";  // untranslated
Blockly.Msg.senseBox_wifi_startap = "Initialize Wifi Access Point";  // untranslated
Blockly.Msg.senseBox_wifi_tip  = "Establishes a wifi connection";  // untranslated
Blockly.Msg.senseBox_windspeed = "Windspeed";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led = "Set ";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_brightness = "Brightness";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_color = "Color";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_init = "Initialise RGB-LED (WS2818)";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_number = "Number of RGB-LEDs";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_pin = "at Pin:";  // untranslated
Blockly.Msg.senseBox_ws2818_rgb_led_position = "Position";  // untranslated
Blockly.Msg.sensebox_display_drawRectangle = "Draw Rectangle";  // untranslated
Blockly.Msg.sensebox_display_drawRectangle_height = "height";  // untranslated
Blockly.Msg.sensebox_display_drawRectangle_width = "width";  // untranslated
Blockly.Msg.sensebox_display_fillCircle = "Draw Point";  // untranslated
Blockly.Msg.sensebox_display_fillCircle_radius = "Radius";  // untranslated
Blockly.Msg.sensebox_display_show  = "Print on Display";  // untranslated
Blockly.Msg.sensebox_display_show_tip  = "Print on Display";  // untranslated
Blockly.Msg.sensebox_sd_filename = "data";  // untranslated
Blockly.Msg.sensebox_soil_smt50 = "Soil Moisture and Temperature (SMT50)";  // untranslated
Blockly.Msg.sensebox_web_readHTML_filename = "File:";  // untranslated
